{
   "name": "Hardshrink(3)",
   "type": "COMPOSITE_OPERATION",
   "aliases": [
     "Hard Thresholding",
     "Hard Shrinkage"
   ],
   "description": [
     "The Hardshrink activation function is used in deep learning models. It sets the output to zero if the absolute input falls below a specific threshold. Otherwise, it keeps the input unchanged.",
     "The threshold value (λ) is typically a hyperparameter that can be tuned during model training. This function is similar to the ReLU activation but uses a non-zero threshold value.",


     "Formula: HardShrink(x) = {x if |x| > λ, 0 otherwise}",


     "Special Parameters: λ (lambda) is a float variable used in Hardshrink formulation. Its default value is 0.5.",
    
     "References:",
     "- Pytorch: [Hardshrink](https://pytorch.org/docs/stable/generated/torch.nn.Hardshrink.html#hardshrink)",
     "- Paper: [hardShrink(a:)](https://developer.apple.com/documentation/mlcompute/mlcactivationlayer/hardshrink(a:))"
   ],
   "inputs": [
     {
       "name": "Input",
       "primitive_name": "Input",
       "input_types_allowed": ["DECIMAL"],
       "array_allowed": true,
       "scalar_allowed": false
     },
     {
       "name": "lambda",
       "primitive_name": "Input (1)",
       "input_types_allowed": ["DECIMAL"],
       "array_allowed": false,
       "scalar_allowed": true
     }
   ],
   "outputs": [
     {
       "name": "Output",
       "primitive_name": "Output",
       "flow_state": "UNBOUND"
     }
   ],
   "operations": [
     {
       "name": "Greater Than or Less Than",
       "type": "COMPOSITE_OPERATION",
       "position": { "x": 1030, "y": 386 },
       "inputs": [
         { "name": "Input", "primitive_name": "Input" },
         { "name": "lambda", "primitive_name": "Input (1)" }
       ],
       "outputs": [
         { "name": "Output", "primitive_name": "Output", "flow_state": "UNBOUND" }
       ],
       "operations": [
         {
           "name": "Broadcast Target to Shape of Array",
           "type": "COMPOSITE_OPERATION",
           "position": { "x": 431, "y": 301 },
           "inputs": [
             { "name": "Target", "primitive_name": "Target" },
             { "name": "Array", "primitive_name": "Array" }
           ],
           "outputs": [
             { "name": "Output", "primitive_name": "Output", "flow_state": "UNBOUND" }
           ],
           "operations": [
             {
               "name": "get_shape",
               "primitive_name": "get_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 601, "y": 346 },
               "inputs": [{ "name": "input", "primitive_name": "input" }],
               "outputs": [{ "name": "shape", "primitive_name": "shape", "flow_state": "UNBOUND" }]
             },
             {
               "name": "broadcast_to_shape",
               "primitive_name": "broadcast_to_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 1097, "y": 42 },
               "inputs": [
                 { "name": "target", "primitive_name": "target" },
                 { "name": "shape", "primitive_name": "shape" }
               ],
               "outputs": [{ "name": "result", "primitive_name": "result", "flow_state": "UNBOUND" }]
             }
           ]
         },
         {
           "name": "greater_than",
           "primitive_name": "greater_than",
           "type": "PRIMITIVE_OPERATION",
           "position": { "x": 1423, "y": 66 },
           "inputs": [
             { "name": "left_operand", "primitive_name": "left_operand" },
             { "name": "right_operand", "primitive_name": "right_operand" }
           ],
           "outputs": [
             { "name": "is_greater_than", "primitive_name": "is_greater_than", "flow_state": "UNBOUND" }
           ]
         }
       ]
     },
     {
       "name": "Multiply by Negative One",
       "type": "COMPOSITE_OPERATION",
       "position": { "x": 1018, "y": 302 },
       "inputs": [{ "name": "Input", "primitive_name": "Input" }],
       "outputs": [
         { "name": "Output", "primitive_name": "Output", "flow_state": "UNBOUND" }
       ],
       "operations": [
         {
           "name": "Broadcast Scalar to Shape of Array",
           "type": "COMPOSITE_OPERATION",
           "position": { "x": 461, "y": 316 },
           "inputs": [
             {
               "name": "Scalar",
               "data": -1.0,
               "shape": [],
               "type": "DECIMAL",
               "primitive_name": "Scalar",
               "flow_state": "BOOT_SOURCE"
             },
             { "name": "Array", "primitive_name": "Array" }
           ],
           "outputs": [
             { "name": "Output", "primitive_name": "Output", "flow_state": "UNBOUND" }
           ],
           "operations": [
             {
               "name": "get_shape",
               "primitive_name": "get_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 601, "y": 346 },
               "inputs": [{ "name": "input", "primitive_name": "input" }],
               "outputs": [{ "name": "shape", "primitive_name": "shape", "flow_state": "UNBOUND" }]
             },
             {
               "name": "broadcast_to_shape",
               "primitive_name": "broadcast_to_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 1097, "y": 42 },
               "inputs": [
                 {
                   "name": "target",
                   "shape": [],
                   "type": "DECIMAL",
                   "primitive_name": "target",
                   "flow_state": "BOOT_SINK"
                 },
                 { "name": "shape", "primitive_name": "shape" }
               ],
               "outputs": [{ "name": "result", "primitive_name": "result", "flow_state": "UNBOUND" }]
             }
           ]
         }
       ]
     },
     {
       "name": "element_wise_multiply",
       "primitive_name": "element_wise_multiply",
       "type": "PRIMITIVE_OPERATION",
       "position": { "x": 1134, "y": 42 },
       "inputs": [
         { "name": "left_array", "primitive_name": "left_array" },
         { "name": "right_array", "primitive_name": "right_array" }
       ],
       "outputs": [
         { "name": "multiplied_array", "primitive_name": "multiplied_array", "flow_state": "UNBOUND" }
       ]
     }
   ],
   "links": [
     { "source": { "operation": "this", "data": "Input" }, "sink": { "operation": "conditional_filter", "data": "data_if_true" }, "control_points": [] },
     { "source": { "operation": "this", "data": "lambda" }, "sink": { "operation": "Greater Than or Less Than", "data": "lambda" }, "control_points": [] },
     { "source": { "operation": "this", "data": "Input" }, "sink": { "operation": "Greater Than or Less Than", "data": "Input" }, "control_points": [] },
     { "source": { "operation": "Greater Than or Less Than", "data": "Output" }, "sink": { "operation": "conditional_filter", "data": "condition" }, "control_points": [] },
     { "source": { "operation": "this", "data": "Input" }, "sink": { "operation": "get_shape", "data": "input" }, "control_points": [] },
     { "source": { "operation": "get_shape", "data": "shape" }, "sink": { "operation": "Zeros", "data": "shape" }, "control_points": [] },
     { "source": { "operation": "Zeros", "data": "result" }, "sink": { "operation": "conditional_filter", "data": "data_if_false" }, "control_points": [] },
     { "source": { "operation": "conditional_filter", "data": "output_data" }, "sink": { "operation": "this", "data": "Output" }, "control_points": [] }
   ],
   "global_constants": []
 }
 
 
