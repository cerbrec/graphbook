{
  "name": "PReLU",
  "type": "COMPOSITE_OPERATION",
  "inputs": [
    {
      "name": "Input",
      "primitive_name": "Input"
    },
    {
      "name": "Weight",
      "primitive_name": "Input (1)"
    }
  ],
  "outputs": [
    {
      "name": "Output",
      "primitive_name": "Output",
      "flow_state": "UNBOUND"
    }
  ],
  "operations": [
    {
      "name": "Do Max",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 368,
        "y": 45
      },
      "inputs": [
        {
          "name": "Input",
          "primitive_name": "Input"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 208,
            "y": 240
          },
          "inputs": [
            {
              "name": "input",
              "primitive_name": "input"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "broadcast_to_shape",
          "primitive_name": "broadcast_to_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "tile_to_shape",
            "expand_to_shape",
            "extend_to_shape"
          ],
          "position": {
            "x": 720,
            "y": 195
          },
          "inputs": [
            {
              "name": "target",
              "data": 0.0,
              "shape": [],
              "type": "DECIMAL",
              "primitive_name": "target",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "shape",
              "primitive_name": "shape"
            }
          ],
          "outputs": [
            {
              "name": "result",
              "primitive_name": "result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "greater_than",
          "primitive_name": "greater_than",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "gt",
            "greater",
            "larger",
            "larger_than",
            "bigger",
            "bigger_than"
          ],
          "position": {
            "x": 1181,
            "y": 27
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "primitive_name": "right_operand"
            }
          ],
          "outputs": [
            {
              "name": "is_greater_than",
              "primitive_name": "is_greater_than",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "conditional_filter",
          "primitive_name": "conditional_filter",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "conditional_merge",
            "replace",
            "where"
          ],
          "position": {
            "x": 1803,
            "y": 108
          },
          "inputs": [
            {
              "name": "condition",
              "primitive_name": "condition"
            },
            {
              "name": "data_if_true",
              "primitive_name": "data_if_true"
            },
            {
              "name": "data_if_false",
              "primitive_name": "data_if_false"
            }
          ],
          "outputs": [
            {
              "name": "output_data",
              "primitive_name": "output_data",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "get_shape",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "get_shape",
            "data": "shape"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "shape"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "greater_than",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "greater_than",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "greater_than",
            "data": "is_greater_than"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "condition"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "data_if_true"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "data_if_false"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "conditional_filter",
            "data": "output_data"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "Do Min",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 687,
        "y": 210
      },
      "inputs": [
        {
          "name": "Input",
          "primitive_name": "Input"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 261,
            "y": 282
          },
          "inputs": [
            {
              "name": "input",
              "primitive_name": "input"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "broadcast_to_shape",
          "primitive_name": "broadcast_to_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "tile_to_shape",
            "expand_to_shape",
            "extend_to_shape"
          ],
          "position": {
            "x": 630,
            "y": 238
          },
          "inputs": [
            {
              "name": "target",
              "data": 0.0,
              "shape": [],
              "type": "DECIMAL",
              "primitive_name": "target",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "shape",
              "primitive_name": "shape"
            }
          ],
          "outputs": [
            {
              "name": "result",
              "primitive_name": "result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "less_than",
          "primitive_name": "less_than",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "lt",
            "less",
            "smaller",
            "smaller_than"
          ],
          "position": {
            "x": 1190,
            "y": 45
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "primitive_name": "right_operand"
            }
          ],
          "outputs": [
            {
              "name": "is_less_than",
              "primitive_name": "is_less_than",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "conditional_filter",
          "primitive_name": "conditional_filter",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "conditional_merge",
            "replace",
            "where"
          ],
          "position": {
            "x": 1682,
            "y": 150
          },
          "inputs": [
            {
              "name": "condition",
              "primitive_name": "condition"
            },
            {
              "name": "data_if_true",
              "primitive_name": "data_if_true"
            },
            {
              "name": "data_if_false",
              "primitive_name": "data_if_false"
            }
          ],
          "outputs": [
            {
              "name": "output_data",
              "primitive_name": "output_data",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "get_shape",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "get_shape",
            "data": "shape"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "shape"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "less_than",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "less_than",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "less_than",
            "data": "is_less_than"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "condition"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "data_if_true"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "conditional_filter",
            "data": "data_if_false"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "conditional_filter",
            "data": "output_data"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "get_shape",
      "primitive_name": "get_shape",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [
        "shape",
        "size",
        "get_size"
      ],
      "position": {
        "x": 341,
        "y": 433
      },
      "inputs": [
        {
          "name": "input",
          "primitive_name": "input"
        }
      ],
      "outputs": [
        {
          "name": "shape",
          "primitive_name": "shape",
          "flow_state": "UNBOUND"
        }
      ]
    },
    {
      "name": "broadcast_to_shape",
      "primitive_name": "broadcast_to_shape",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [
        "tile_to_shape",
        "expand_to_shape",
        "extend_to_shape"
      ],
      "position": {
        "x": 794,
        "y": 389
      },
      "inputs": [
        {
          "name": "target",
          "primitive_name": "target"
        },
        {
          "name": "shape",
          "primitive_name": "shape"
        }
      ],
      "outputs": [
        {
          "name": "result",
          "primitive_name": "result",
          "flow_state": "UNBOUND"
        }
      ]
    },
    {
      "name": "element_wise_multiply",
      "primitive_name": "element_wise_multiply",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [
        "times"
      ],
      "position": {
        "x": 1222,
        "y": 252
      },
      "inputs": [
        {
          "name": "left_array",
          "primitive_name": "left_array"
        },
        {
          "name": "right_array",
          "primitive_name": "right_array"
        }
      ],
      "outputs": [
        {
          "name": "multiplied_array",
          "primitive_name": "multiplied_array",
          "flow_state": "UNBOUND"
        }
      ]
    },
    {
      "name": "add",
      "primitive_name": "add",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [
        "plus",
        "increment"
      ],
      "position": {
        "x": 1636,
        "y": 45
      },
      "inputs": [
        {
          "name": "left_operand",
          "primitive_name": "left_operand"
        },
        {
          "name": "right_operand",
          "primitive_name": "right_operand"
        }
      ],
      "outputs": [
        {
          "name": "added_result",
          "primitive_name": "added_result",
          "flow_state": "UNBOUND"
        }
      ]
    }
  ],
  "links": [
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "Do Max",
        "data": "Input"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "Do Min",
        "data": "Input"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Do Max",
        "data": "Output"
      },
      "sink": {
        "operation": "add",
        "data": "left_operand"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "add",
        "data": "added_result"
      },
      "sink": {
        "operation": "this",
        "data": "Output"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "get_shape",
        "data": "input"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "get_shape",
        "data": "shape"
      },
      "sink": {
        "operation": "broadcast_to_shape",
        "data": "shape"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": "Weight"
      },
      "sink": {
        "operation": "broadcast_to_shape",
        "data": "target"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Do Min",
        "data": "Output"
      },
      "sink": {
        "operation": "element_wise_multiply",
        "data": "left_array"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "broadcast_to_shape",
        "data": "result"
      },
      "sink": {
        "operation": "element_wise_multiply",
        "data": "right_array"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "element_wise_multiply",
        "data": "multiplied_array"
      },
      "sink": {
        "operation": "add",
        "data": "right_operand"
      },
      "control_points": []
    }
  ],
  "global_constants": [],
  "description": [
    "Applies the element-wise PReLU function. Here a is a learnable parameter. When called without arguments, nn.PReLU() uses a single parameter a across all input channels. If called with nn.PReLU(nChannels), a seperate a is used for each input channel."
  ]
}