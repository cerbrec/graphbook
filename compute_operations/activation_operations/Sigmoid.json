{
   "name": "Sigmoid(5)",
   "type": "COMPOSITE_OPERATION",
   "aliases": [
     "Logistic Function",
     "S-Curve",
     "Activation Function"
   ],
   "description": [
     "Applies the logistic regression model, Sigmoid, element-wise. The sigmoid function is used primarily to define probabilities, making it particularly useful for binary-classification tasks in neural networks, as it effectively maps any input to an output of 0 or 1, representing the likelihood of belonging to a specific classification.",

     "Sigmoid is a nonlinear activation function that maps its inputs on the interval between 0 and 1. The graph of Sigmoid takes on an S-shaped curve; the bottom of the curve gets asymptotically close to 0 while the top gets asymptotically close to 1. It is mainly used within Neural networks, and has important applications to the world of finance and economics. However, it is one of the older activation operations, and has some considerable engineering flaws, such as the vanishing gradient problem. When using the sigmoid function in deep neural networks, the gradient can become very small during backpropagation, leading to slow learning.",
     
     "References/Pytorch: Documentation: Sigmoid, url: https://pytorch.org/docs/stable/generated/torch.nn.Sigmoid.html#torch.nn.Sigmoid",
     "References/Paper: Activation Functions in Deep Learning: Sigmoid, tanh, ReLU, url: https://artemoppermann.com/activation-functions-in-deep-learning-sigmoid-tanh-relu/",
     "Formula: Sigmoid(x)= Ïƒ(x) =(e^x)/((e^x)+1)"
   ],
   "inputs": [
     {
       "name": "Input",
       "primitive_name": "Input",
       "input_types_allowed": ["DECIMAL"],
       "array_allowed": true,
       "scalar_allowed": false
     }
   ],
   "outputs": [
     {
       "name": "Output",
       "primitive_name": "Output",
       "flow_state": "UNBOUND"
     }
   ],
   "operations": [
     {
       "name": "Multiply by Negative One",
       "type": "COMPOSITE_OPERATION",
       "position": { "x": 359, "y": 193 },
       "inputs": [
         {
           "name": "Input",
           "primitive_name": "Input"
         }
       ],
       "outputs": [
         {
           "name": "Output",
           "primitive_name": "Output",
           "flow_state": "UNBOUND"
         }
       ],
       "operations": [
         {
           "name": "Broadcast Scalar to Shape of Array",
           "type": "COMPOSITE_OPERATION",
           "position": { "x": 461, "y": 316 },
           "inputs": [
             {
               "name": "Scalar",
               "data": -1.0,
               "shape": [],
               "type": "DECIMAL",
               "primitive_name": "Scalar",
               "flow_state": "BOOT_SOURCE"
             },
             {
               "name": "Array",
               "primitive_name": "Array"
             }
           ],
           "outputs": [
             {
               "name": "Output",
               "primitive_name": "Output",
               "flow_state": "UNBOUND"
             }
           ],
           "operations": [
             {
               "name": "get_shape",
               "primitive_name": "get_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 601, "y": 346 },
               "inputs": [
                 {
                   "name": "input",
                   "primitive_name": "input"
                 }
               ],
               "outputs": [
                 {
                   "name": "shape",
                   "primitive_name": "shape",
                   "flow_state": "UNBOUND"
                 }
               ]
             },
             {
               "name": "broadcast_to_shape",
               "primitive_name": "broadcast_to_shape",
               "type": "PRIMITIVE_OPERATION",
               "position": { "x": 1097, "y": 42 },
               "inputs": [
                 {
                   "name": "target",
                   "shape": [],
                   "type": "DECIMAL",
                   "primitive_name": "target",
                   "flow_state": "BOOT_SINK"
                 },
                 {
                   "name": "shape",
                   "primitive_name": "shape"
                 }
               ],
               "outputs": [
                 {
                   "name": "result",
                   "primitive_name": "result",
                   "flow_state": "UNBOUND"
                 }
               ]
             }
           ],
           "links": [
             {
               "source": { "operation": "this", "data": "Array" },
               "sink": { "operation": "get_shape", "data": "input" },
               "control_points": [{ "x": 427, "y": 404 }]
             },
             {
               "source": { "operation": "this", "data": "Scalar" },
               "sink": { "operation": "broadcast_to_shape", "data": "target" },
               "control_points": []
             },
             {
               "source": { "operation": "get_shape", "data": "shape" },
               "sink": { "operation": "broadcast_to_shape", "data": "shape" },
               "control_points": []
             },
             {
               "source": { "operation": "broadcast_to_shape", "data": "result" },
               "sink": { "operation": "this", "data": "Output" },
               "control_points": []
             }
           ]
         },
         {
           "name": "element_wise_multiply",
           "primitive_name": "element_wise_multiply",
           "type": "PRIMITIVE_OPERATION",
           "position": { "x": 1134, "y": 42 },
           "inputs": [
             {
               "name": "left_array",
               "primitive_name": "left_array"
             },
             {
               "name": "right_array",
               "primitive_name": "right_array"
             }
           ],
           "outputs": [
             {
               "name": "multiplied_array",
               "primitive_name": "multiplied_array",
               "flow_state": "UNBOUND"
             }
           ]
         }
       ],
       "links": [
         {
           "source": { "operation": "this", "data": "Input" },
           "sink": { "operation": "Broadcast Scalar to Shape of Array", "data": "Array" },
           "control_points": []
         },
         {
           "source": { "operation": "this", "data": "Input" },
           "sink": { "operation": "element_wise_multiply", "data": "left_array" },
           "control_points": []
         },
         {
           "source": { "operation": "Broadcast Scalar to Shape of Array", "data": "Output" },
           "sink": { "operation": "element_wise_multiply", "data": "right_array" },
           "control_points": []
         },
         {
           "source": { "operation": "element_wise_multiply", "data": "multiplied_array" },
           "sink": { "operation": "this", "data": "Output" },
           "control_points": []
         }
       ]
     },
     {
       "name": "Natural Exponential",
       "type": "COMPOSITE_OPERATION",
       "position": { "x": 831, "y": 192 },
       "inputs": [
         {
           "name": "Input",
           "primitive_name": "Input"
         }
       ],
       "outputs": [
         {
           "name": "Output",
           "primitive_name": "Output",
           "flow_state": "UNBOUND"
         }
       ],
       "operations": [
         {
           "name": "get_shape",
           "primitive_name": "get_shape",
           "type": "PRIMITIVE_OPERATION",
           "position": { "x": 515, "y": 45 },
           "inputs": [
             {
               "name": "input",
               "primitive_name": "input"
             }
           ],
           "outputs": [
             {
               "name": "shape",
               "primitive_name": "shape",
               "flow_state": "UNBOUND"
             }
           ]
         },
         {
           "name": "broadcast_to_shape",
           "primitive_name": "broadcast_to_shape",
           "type": "PRIMITIVE_OPERATION",
           "position": { "x": 1040, "y": 135 },
           "inputs": [
             {
               "name": "target",
               "data": 2.71828,
               "shape": [],
               "type": "DECIMAL",
               "primitive_name": "target",
               "flow_state": "BOOT_SOURCE"
             },
             {
               "name": "shape",
               "primitive_name": "shape"
             }
           ],
           "outputs": [
             {
               "name": "result",
               "primitive_name": "result",
               "flow_state": "UNBOUND"
             }
           ]
         },
         {
           "name": "element_wise_exponentiate",
           "primitive_name": "element_wise_exponentiate",
           "type": "PRIMITIVE_OPERATION",
           "position": { "x": 1601, "y": 131 },
           "inputs": [
             {
               "name": "base",
               "primitive_name": "base"
             },
             {
               "name": "exponent",
               "primitive_name": "exponent"
             }
           ],
           "outputs": [
             {
               "name": "exponentiation",
               "primitive_name": "exponentiation",
               "flow_state": "UNBOUND"
             }
           ]
         }
       ],
       "links": [
         {
           "source": { "operation": "this", "data": "Input" },
           "sink": { "operation": "get_shape", "data": "input" },
           "control_points": []
         },
         {
           "source": { "operation": "get_shape", "data": "shape" },
           "sink": { "operation": "broadcast_to_shape", "data": "shape" },
           "control_points": []
         },
         {
           "source": { "operation": "broadcast_to_shape", "data": "result" },
           "sink": { "operation": "element_wise_exponentiate", "data": "base" },
           "control_points": []
         },
         {
           "source": { "operation": "this", "data": "Input" },
           "sink": { "operation": "element_wise_exponentiate", "data": "exponent" },
           "control_points": [
             { "x": 451, "y": 369 },
             { "x": 1491, "y": 369 }
           ]
         },
         {
           "source": { "operation": "element_wise_exponentiate", "data": "exponentiation" },
           "sink": { "operation": "this", "data": "Output" },
           "control_points": []
         }
       ]
     }
   ],
   "links": [
     {
       "source": { "operation": "this", "data": "Input" },
       "sink": { "operation": "Multiply by Negative One", "data": "Input" },
       "control_points": []
     },
     {
       "source": { "operation": "Multiply by Negative One", "data": "Output" },
       "sink": { "operation": "Natural Exponential", "data": "Input" },
       "control_points": []
     },
     {
       "source": { "operation": "Natural Exponential", "data": "Output" },
       "sink": { "operation": "add", "data": "left_operand" },
       "control_points": []
     },
     {
       "source": { "operation": "Broadcast Target to Shape of Array", "data": "Output" },
       "sink": { "operation": "add", "data": "right_operand" },
       "control_points": []
     },
     {
       "source": { "operation": "add", "data": "added_result" },
       "sink": { "operation": "Reciprocal", "data": "Input" },
       "control_points": []
     },
     {
       "source": { "operation": "this", "data": "Input" },
       "sink": { "operation": "Broadcast Target to Shape of Array", "data": "Array" },
       "control_points": [{ "x": 300, "y": 464 }]
     },
     {
       "source": { "operation": "Reciprocal", "data": "Output" },
       "sink": { "operation": "this", "data": "Output" },
       "control_points": []
     }
   ],
   "global_constants": []
 }
 
 
 
