{
   "name": "Tanh Shrink",
   "type": "COMPOSITE_OPERATION",
   "aliases": [
     "Hyperbolic Tangent Shrinkage",
     "Tanh Normalizer",
     "Tanh Activation"
   ],
   "description": [
     "Applies the Tanhshrink function to an input, which compresses the input value to a range between -1 and 1, shrinking the possible outputs while maintaining a zero-centered distribution.",
     "This activation operation is a more advanced version of the sigmoid function. It has the same applications in neural networks, yet offers greater Gradient Stability. While still susceptible to vanishing gradients in very deep networks, the tanh function generally has steeper gradients compared to sigmoid, which can be beneficial in backpropagation. Unlike sigmoid, tanh has a zero-centered output, meaning the average output is closer to zero. Like the sigmoid function, the shrink tanh operation also models a logistic regression curve, yet is more symmetrical around the origin.",
    
     "References/Pytorch: Documentation: Tanhshrink, url: https://pytorch.org/docs/stable/generated/torch.nn.Tanhshrink.html#torch.nn.Tanhshrink",


     "References/Paper: Paper: How Activation Functions Work in Deep Learning, url: https://www.kdnuggets.com/2022/06/activation-functions-work-deep-learning.html"
   ],
   "inputs": [
     {
       "name": "Input",
       "data": [
         [-0.2678, -0.2678, -12.976]
       ],
       "shape": [1, 3],
       "type": "DECIMAL",
       "primitive_name": "Input",
       "flow_state": "BOOT_SOURCE",
       "input_types_allowed": ["DECIMAL"],
       "array_allowed": true,
       "scalar_allowed": false
     }
   ],
   "outputs": [
     {
       "name": "Output",
       "shape": [1, 3],
       "type": "DECIMAL",
       "primitive_name": "Output",
       "flow_state": "UNBOUND"
     }
   ],
   "operations": [
     {
       "name": "Tanh",
       "type": "COMPOSITE_OPERATION",
       "position": {
         "x": 312,
         "y": 226
       },
       "inputs": [
         {
           "name": "Input",
           "shape": [1, 3],
           "type": "DECIMAL",
           "primitive_name": "Input",
           "flow_state": "BOOT_SINK"
         }
       ],
       "outputs": [
         {
           "name": "Output",
           "shape": [1, 3],
           "type": "DECIMAL",
           "primitive_name": "Output",
           "flow_state": "UNBOUND"
         }
       ],
       "operations": [
         {
           "name": "exp(Input) ? exp(?Input)?",
           "type": "COMPOSITE_OPERATION",
           "position": {
             "x": 624,
             "y": 47
           },
           "inputs": [
             {
               "name": "Input",
               "shape": [1, 3],
               "type": "DECIMAL",
               "primitive_name": "Input",
               "flow_state": "BOOT_SINK"
             }
           ],
           "outputs": [
             {
               "name": "Output",
               "shape": [1, 3],
               "type": "DECIMAL",
               "primitive_name": "Output",
               "flow_state": "UNBOUND"
             }
           ],
           "operations": [
             {
               "name": "Multiply by Negative One",
               "type": "COMPOSITE_OPERATION",
               "position": {
                 "x": 559,
                 "y": 277
               },
               "inputs": [
                 {
                   "name": "Input",
                   "shape": [1, 3],
                   "type": "DECIMAL",
                   "primitive_name": "Input",
                   "flow_state": "BOOT_SINK"
                 }
               ],
               "outputs": [
                 {
                   "name": "Output",
                   "shape": [1, 3],
                   "type": "DECIMAL",
                   "primitive_name": "Output",
                   "flow_state": "UNBOUND"
                 }
               ],
               "operations": [
                 {
                   "name": "Broadcast Scalar to Shape of Array",
                   "type": "COMPOSITE_OPERATION",
                   "position": {
                     "x": 461,
                     "y": 316
                   },
                   "inputs": [
                     {
                       "name": "Scalar",
                       "data": -1.0,
                       "shape": [],
                       "type": "DECIMAL",
                       "primitive_name": "Scalar",
                       "flow_state": "BOOT_SOURCE"
                     },
                     {
                       "name": "Array",
                       "shape": [1, 3],
                       "type": "DECIMAL",
                       "primitive_name": "Array",
                       "flow_state": "BOOT_SINK"
                     }
                   ],
                   "outputs": [
                     {
                       "name": "Output",
                       "shape": [1, 3],
                       "type": "DECIMAL",
                       "primitive_name": "Output",
                       "flow_state": "UNBOUND"
                     }
                   ],
                   "operations": [
                     {
                       "name": "get_shape",
                       "primitive_name": "get_shape",
                       "type": "PRIMITIVE_OPERATION",
                       "position": {
                         "x": 601,
                         "y": 346
                       },
                       "inputs": [
                         {
                           "name": "input",
                           "shape": [1, 3],
                           "type": "DECIMAL",
                           "primitive_name": "input",
                           "flow_state": "BOOT_SINK"
                         }
                       ],
                       "outputs": [
                         {
                           "name": "shape",
                           "shape": [2],
                           "type": "INTEGER",
                           "primitive_name": "shape",
                           "flow_state": "UNBOUND"
                         }
                       ]
                     },
                     {
                       "name": "broadcast_to_shape",
                       "primitive_name": "broadcast_to_shape",
                       "type": "PRIMITIVE_OPERATION",
                       "position": {
                         "x": 1097,
                         "y": 42
                       },
                       "inputs": [
                         {
                           "name": "target",
                           "shape": [],
                           "type": "DECIMAL",
                           "primitive_name": "target",
                           "flow_state": "BOOT_SINK"
                         },
                         {
                           "name": "shape",
                           "shape": [2],
                           "type": "INTEGER",
                           "primitive_name": "shape",
                           "flow_state": "REF_SINK"
                         }
                       ],
                       "outputs": [
                         {
                           "name": "result",
                           "shape": [1, 3],
                           "type": "DECIMAL",
                           "primitive_name": "result",
                           "flow_state": "UNBOUND"
                         }
                       ]
                     }
                   ],
                   "links": [
                     {
                       "source": {
                         "operation": "this",
                         "data": "Array"
                       },
                       "sink": {
                         "operation": "get_shape",
                         "data": "input"
                       },
                       "control_points": [
                         {
                           "x": 427,
                           "y": 404
                         }
                       ]
                     },
                     {
                       "source": {
                         "operation": "this",
                         "data": "Scalar"
                       },
                       "sink": {
                         "operation": "broadcast_to_shape",
                         "data": "target"
                       },
                       "control_points": []
                     },
                     {
                       "source": {
                         "operation": "get_shape",
                         "data": "shape"
                       },
                       "sink": {
                         "operation": "broadcast_to_shape",
                         "data": "shape"
                       },
                       "control_points": []
                     },
                     {
                       "source": {
                         "operation": "broadcast_to_shape",
                         "data": "result"
                       },
                       "sink": {
                         "operation": "this",
                         "data": "Output"
                       },
                       "control_points": []
                     }
                   ]
                 },
                 {
                   "name": "element_wise_multiply",
                   "primitive_name": "element_wise_multiply",
                   "type": "PRIMITIVE_OPERATION",
                   "position": {
                     "x": 1134,
                     "y": 42
                   },
                   "inputs": [
                     {
                       "name": "left_array",
                       "shape": [1, 3],
                       "type": "DECIMAL",
                       "primitive_name": "left_array",
                       "flow_state": "BOOT_SINK"
                     },
                     {
                       "name": "right_array",
                       "shape": [1, 3],
                       "type": "DECIMAL",
                       "primitive_name": "right_array",
                       "flow_state": "REF_SINK"
                     }
                   ],
                   "outputs": [
                     {
                       "name": "multiplied_array",
                       "shape": [1, 3],
                       "type": "DECIMAL",
                       "primitive_name": "multiplied_array",
                       "flow_state": "UNBOUND"
                     }
                   ]
                 }
               ],
               "links": [
                 {
                   "source": {
                     "operation": "this",
                     "data": "Input"
                   },
                   "sink": {
                     "operation": "Broadcast Scalar to Shape of Array",
                     "data": "Array"
                   },
                   "control_points": []
                 },
                 {
                   "source": {
                     "operation": "this",
                     "data": "Input"
                   },
                   "sink": {
                     "operation": "element_wise_multiply",
                     "data": "left_array"
                   },
                   "control_points": []
                 },
                 {
                   "source": {
                     "operation": "Broadcast Scalar to Shape of Array",
                     "data": "Output"
                   },
                   "sink": {
                     "operation": "element_wise_multiply",
                     "data": "right_array"
                   },
                   "control_points": []
                 },
                 {
                   "source": {
                     "operation": "element_wise_multiply",
                     "data": "multiplied_array"
                   },
                   "sink": {
                     "operation": "this",
                     "data": "Output"
                   },
                   "control_points": []
                 }
               ]
             }
           ]
         }
       ]
     }
   ]
 }
 



