{
  "name": "Adjacency Matrix to Edge Indices",
  "type": "COMPOSITE_OPERATION",
  "inputs": [
    {
      "name": "Input",
      "data": [
        [
          0,
          1,
          0,
          0,
          1,
          0
        ],
        [
          1,
          0,
          1,
          0,
          0,
          0
        ],
        [
          0,
          1,
          0,
          1,
          0,
          0
        ],
        [
          0,
          0,
          1,
          0,
          1,
          1
        ],
        [
          1,
          0,
          0,
          1,
          0,
          1
        ],
        [
          0,
          0,
          0,
          1,
          1,
          0
        ]
      ],
      "shape": [
        6,
        6
      ],
      "type": "INTEGER",
      "primitive_name": "Input",
      "flow_state": "BOOT_SOURCE"
    }
  ],
  "outputs": [
    {
      "name": "Output",
      "primitive_name": "Output",
      "flow_state": "UNBOUND"
    }
  ],
  "operations": [
    {
      "name": "Find Number of Cells in Adj Matrix",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 276,
        "y": 43
      },
      "inputs": [
        {
          "name": "Input",
          "shape": [
            6,
            6
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "BOOT_SINK"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 417,
            "y": 46
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                6,
                6
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "BOOT_SINK"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "find how many rows",
          "primitive_name": "slice",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [],
          "position": {
            "x": 866,
            "y": 48
          },
          "inputs": [
            {
              "name": "array",
              "shape": [
                2
              ],
              "type": "INTEGER",
              "primitive_name": "array",
              "flow_state": "REF_SINK"
            },
            {
              "name": "dimension_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "dimension_index",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "start_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "start_index",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "end_index",
              "data": 1,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "end_index",
              "flow_state": "BOOT_SOURCE"
            }
          ],
          "outputs": [
            {
              "name": "sliced_array",
              "primitive_name": "sliced_array",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "multiply",
          "primitive_name": "multiply",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "times",
            "dot",
            "prod",
            "product",
            "dot_prod",
            "dot_product",
            "matmul",
            "matrix_multiply"
          ],
          "position": {
            "x": 1258,
            "y": 64
          },
          "inputs": [
            {
              "name": "left_operand",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "left_operand",
              "flow_state": "REF_SINK"
            },
            {
              "name": "right_operand",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "right_operand",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "multiplied_result",
              "primitive_name": "multiplied_result",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "get_shape",
            "data": "shape"
          },
          "sink": {
            "operation": "find how many rows",
            "data": "array"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "find how many rows",
            "data": "sliced_array"
          },
          "sink": {
            "operation": "multiply",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "find how many rows",
            "data": "sliced_array"
          },
          "sink": {
            "operation": "multiply",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "get_shape",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "multiply",
            "data": "multiplied_result"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "Flatten Input Matrix",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 667,
        "y": 288
      },
      "inputs": [
        {
          "name": "Input",
          "shape": [
            6,
            6
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "BOOT_SINK"
        },
        {
          "name": "#Cells",
          "shape": [],
          "type": "INTEGER",
          "primitive_name": "Input (1)",
          "flow_state": "REF_SINK"
        }
      ],
      "input_order": [
        1,
        0
      ],
      "subgraph_input_order": [
        1,
        0
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "subgraph_output_order": [
        1,
        0
      ],
      "operations": [
        {
          "name": "expand_one_dimension",
          "primitive_name": "expand_one_dimension",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "extend_one_dimension",
            "increase_one_dimension"
          ],
          "position": {
            "x": 390,
            "y": 105
          },
          "inputs": [
            {
              "name": "input",
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "REF_SINK"
            },
            {
              "name": "dimension_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "dimension_index",
              "flow_state": "BOOT_SOURCE"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "primitive_name": "output",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "reshape",
          "primitive_name": "reshape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "view"
          ],
          "position": {
            "x": 959,
            "y": 214
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                6,
                6
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "BOOT_SINK"
            },
            {
              "name": "new_shape",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "new_shape",
              "flow_state": "REF_SINK"
            }
          ],
          "input_order": [
            1,
            0
          ],
          "outputs": [
            {
              "name": "output",
              "primitive_name": "output",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "reshape",
            "data": "output"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "#Cells"
          },
          "sink": {
            "operation": "expand_one_dimension",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "expand_one_dimension",
            "data": "output"
          },
          "sink": {
            "operation": "reshape",
            "data": "new_shape"
          },
          "control_points": [
            {
              "x": 824,
              "y": 169
            }
          ]
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "reshape",
            "data": "input"
          },
          "control_points": [
            {
              "x": 373,
              "y": 321
            }
          ]
        }
      ]
    },
    {
      "name": "Find Cells with Edges",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 1095,
        "y": 43
      },
      "inputs": [
        {
          "name": "#Cells",
          "shape": [],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "REF_SINK"
        },
        {
          "name": "Mask",
          "shape": [
            36
          ],
          "type": "INTEGER",
          "primitive_name": "Input (1)",
          "flow_state": "REF_SINK"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "range",
          "primitive_name": "range",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [],
          "position": {
            "x": 360,
            "y": 36
          },
          "inputs": [
            {
              "name": "start_value",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "start_value",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "end_value",
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "end_value",
              "flow_state": "REF_SINK"
            },
            {
              "name": "step_value",
              "data": 1,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "step_value",
              "flow_state": "BOOT_SOURCE"
            }
          ],
          "outputs": [
            {
              "name": "vector",
              "primitive_name": "vector",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "parse_boolean",
          "primitive_name": "parse_boolean",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "parse_to_boolean",
            "convert_to_boolean",
            "cast_to_boolean"
          ],
          "position": {
            "x": 514,
            "y": 302
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                36
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "primitive_name": "output",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "filter",
          "primitive_name": "filter",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [],
          "position": {
            "x": 904,
            "y": 38
          },
          "inputs": [
            {
              "name": "array",
              "shape": [
                36
              ],
              "type": "INTEGER",
              "primitive_name": "array",
              "flow_state": "REF_SINK"
            },
            {
              "name": "dimension_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "dimension_index",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "condition",
              "shape": [
                36
              ],
              "type": "BOOLEAN",
              "primitive_name": "condition",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "filtered_array",
              "primitive_name": "filtered_array",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "range",
            "data": "vector"
          },
          "sink": {
            "operation": "filter",
            "data": "array"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "parse_boolean",
            "data": "output"
          },
          "sink": {
            "operation": "filter",
            "data": "condition"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "filter",
            "data": "filtered_array"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Mask"
          },
          "sink": {
            "operation": "parse_boolean",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "#Cells"
          },
          "sink": {
            "operation": "range",
            "data": "end_value"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "No of Rows/Columns in Adj Matrix",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 1009,
        "y": 478
      },
      "inputs": [
        {
          "name": "Input",
          "shape": [
            6,
            6
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "BOOT_SINK"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape_1",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 400,
            "y": 114
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                6,
                6
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "BOOT_SINK"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "slice",
          "primitive_name": "slice",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [],
          "position": {
            "x": 786,
            "y": 100
          },
          "inputs": [
            {
              "name": "array",
              "shape": [
                2
              ],
              "type": "INTEGER",
              "primitive_name": "array",
              "flow_state": "REF_SINK"
            },
            {
              "name": "dimension_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "dimension_index",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "start_index",
              "data": 0,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "start_index",
              "flow_state": "BOOT_SOURCE"
            },
            {
              "name": "end_index",
              "data": 1,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "end_index",
              "flow_state": "BOOT_SOURCE"
            }
          ],
          "outputs": [
            {
              "name": "sliced_array",
              "primitive_name": "sliced_array",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "get_shape_1",
            "data": "shape"
          },
          "sink": {
            "operation": "slice",
            "data": "array"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "slice",
            "data": "sliced_array"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "get_shape_1",
            "data": "input"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "Find Column Indices",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 1650,
        "y": 434
      },
      "inputs": [
        {
          "name": "#Columns",
          "shape": [
            1
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "REF_SINK"
        },
        {
          "name": "Cells with edges",
          "shape": [
            14
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "REF_SINK"
        }
      ],
      "input_order": [
        1,
        0
      ],
      "subgraph_input_order": [
        1,
        0
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 344,
            "y": 161
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "broadcast_to_shape",
          "primitive_name": "broadcast_to_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "tile_to_shape",
            "expand_to_shape",
            "extend_to_shape"
          ],
          "position": {
            "x": 750,
            "y": 203
          },
          "inputs": [
            {
              "name": "target",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "target",
              "flow_state": "REF_SINK"
            },
            {
              "name": "shape",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "shape",
              "flow_state": "REF_SINK"
            }
          ],
          "input_order": [
            1,
            0
          ],
          "outputs": [
            {
              "name": "result",
              "primitive_name": "result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "modulo",
          "primitive_name": "modulo",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "mod"
          ],
          "position": {
            "x": 1123,
            "y": 44
          },
          "inputs": [
            {
              "name": "left_operand",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "left_operand",
              "flow_state": "REF_SINK"
            },
            {
              "name": "right_operand",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "right_operand",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "result",
              "primitive_name": "result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "Transpose 1D and 2D",
          "type": "COMPOSITE_OPERATION",
          "position": {
            "x": 1652,
            "y": 42
          },
          "inputs": [
            {
              "name": "Array",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "Array",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "Transposed Array",
              "primitive_name": "Transposed Array",
              "flow_state": "UNBOUND"
            }
          ],
          "operations": [
            {
              "name": "get_shape",
              "primitive_name": "get_shape",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 416,
                "y": 195
              },
              "inputs": [
                {
                  "name": "input",
                  "shape": [
                    14
                  ],
                  "type": "INTEGER",
                  "primitive_name": "input",
                  "flow_state": "REF_SINK"
                }
              ],
              "outputs": [
                {
                  "name": "shape",
                  "primitive_name": "shape",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "get_dimension_size",
              "primitive_name": "get_dimension_size",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 874,
                "y": 196
              },
              "inputs": [
                {
                  "name": "array",
                  "shape": [
                    1
                  ],
                  "type": "INTEGER",
                  "primitive_name": "array",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "dimension_index",
                  "data": 0,
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "dimension_index",
                  "flow_state": "BOOT_SOURCE"
                }
              ],
              "outputs": [
                {
                  "name": "dimension_size",
                  "primitive_name": "dimension_size",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "greater_than",
              "primitive_name": "greater_than",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 1356,
                "y": 196
              },
              "inputs": [
                {
                  "name": "left_operand",
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "left_operand",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "right_operand",
                  "data": 1,
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "right_operand",
                  "flow_state": "BOOT_SOURCE"
                }
              ],
              "outputs": [
                {
                  "name": "is_greater_than",
                  "primitive_name": "is_greater_than",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "Transpose",
              "type": "CONDITIONAL_OPERATION",
              "position": {
                "x": 1878,
                "y": 196
              },
              "inputs": [
                {
                  "name": "Is True",
                  "shape": [],
                  "type": "BOOLEAN",
                  "primitive_name": "Is True",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "Array",
                  "shape": [
                    14
                  ],
                  "type": "INTEGER",
                  "primitive_name": "New Input",
                  "flow_state": "REF_SINK"
                }
              ],
              "outputs": [
                {
                  "name": "Output",
                  "primitive_name": "Output",
                  "flow_state": "UNBOUND"
                }
              ],
              "operations_if_true": [
                {
                  "name": "swap_dimensions",
                  "primitive_name": "swap_dimensions",
                  "type": "PRIMITIVE_OPERATION",
                  "position": {
                    "x": 592,
                    "y": 47
                  },
                  "inputs": [
                    {
                      "name": "array",
                      "primitive_name": "array"
                    },
                    {
                      "name": "dimension_index_1",
                      "data": 0,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index_1",
                      "flow_state": "BOOT_SOURCE"
                    },
                    {
                      "name": "dimension_index_2",
                      "data": 1,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index_2",
                      "flow_state": "BOOT_SOURCE"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "swapped_array",
                      "primitive_name": "swapped_array",
                      "flow_state": "UNBOUND"
                    }
                  ]
                }
              ],
              "links_if_true": [
                {
                  "source": {
                    "operation": "this",
                    "data": "Array"
                  },
                  "sink": {
                    "operation": "swap_dimensions",
                    "data": "array"
                  },
                  "control_points": []
                },
                {
                  "source": {
                    "operation": "swap_dimensions",
                    "data": "swapped_array"
                  },
                  "sink": {
                    "operation": "this",
                    "data": "Output"
                  },
                  "control_points": []
                }
              ],
              "operations_if_false": [
                {
                  "name": "expand_one_dimension",
                  "primitive_name": "expand_one_dimension",
                  "type": "PRIMITIVE_OPERATION",
                  "position": {
                    "x": 534,
                    "y": 47
                  },
                  "inputs": [
                    {
                      "name": "input",
                      "shape": [
                        14
                      ],
                      "type": "INTEGER",
                      "primitive_name": "input",
                      "flow_state": "REF_SINK"
                    },
                    {
                      "name": "dimension_index",
                      "data": 0,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index",
                      "flow_state": "BOOT_SOURCE"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "output",
                      "primitive_name": "output",
                      "flow_state": "UNBOUND"
                    }
                  ]
                }
              ],
              "links_if_false": [
                {
                  "source": {
                    "operation": "this",
                    "data": "Array"
                  },
                  "sink": {
                    "operation": "expand_one_dimension",
                    "data": "input"
                  },
                  "control_points": []
                },
                {
                  "source": {
                    "operation": "expand_one_dimension",
                    "data": "output"
                  },
                  "sink": {
                    "operation": "this",
                    "data": "Output"
                  },
                  "control_points": []
                }
              ],
              "condition": {
                "name": "Is True"
              }
            }
          ],
          "links": [
            {
              "source": {
                "operation": "this",
                "data": "Array"
              },
              "sink": {
                "operation": "get_shape",
                "data": "input"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "get_shape",
                "data": "shape"
              },
              "sink": {
                "operation": "get_dimension_size",
                "data": "array"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "Transpose",
                "data": "Output"
              },
              "sink": {
                "operation": "this",
                "data": "Transposed Array"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "get_dimension_size",
                "data": "dimension_size"
              },
              "sink": {
                "operation": "greater_than",
                "data": "left_operand"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "greater_than",
                "data": "is_greater_than"
              },
              "sink": {
                "operation": "Transpose",
                "data": "Is True"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "this",
                "data": "Array"
              },
              "sink": {
                "operation": "Transpose",
                "data": "Array"
              },
              "control_points": [
                {
                  "x": 344,
                  "y": 432
                },
                {
                  "x": 1756,
                  "y": 432
                }
              ]
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "modulo",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Cells with edges"
          },
          "sink": {
            "operation": "modulo",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "#Columns"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "target"
          },
          "control_points": [
            {
              "x": 352,
              "y": 310
            }
          ]
        },
        {
          "source": {
            "operation": "this",
            "data": "Cells with edges"
          },
          "sink": {
            "operation": "get_shape",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "get_shape",
            "data": "shape"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "shape"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "modulo",
            "data": "result"
          },
          "sink": {
            "operation": "Transpose 1D and 2D",
            "data": "Array"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "Transpose 1D and 2D",
            "data": "Transposed Array"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "Find Row Indices",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 1627,
        "y": 43
      },
      "inputs": [
        {
          "name": "Input",
          "shape": [
            14
          ],
          "type": "INTEGER",
          "primitive_name": "Input",
          "flow_state": "REF_SINK"
        },
        {
          "name": "#Rows",
          "shape": [
            1
          ],
          "type": "INTEGER",
          "primitive_name": "Input (1)",
          "flow_state": "REF_SINK"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        }
      ],
      "operations": [
        {
          "name": "get_shape",
          "primitive_name": "get_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "shape",
            "size",
            "get_size"
          ],
          "position": {
            "x": 284,
            "y": 208
          },
          "inputs": [
            {
              "name": "input",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "input",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "shape",
              "primitive_name": "shape",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "broadcast_to_shape",
          "primitive_name": "broadcast_to_shape",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "tile_to_shape",
            "expand_to_shape",
            "extend_to_shape"
          ],
          "position": {
            "x": 747,
            "y": 209
          },
          "inputs": [
            {
              "name": "target",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "target",
              "flow_state": "REF_SINK"
            },
            {
              "name": "shape",
              "shape": [
                1
              ],
              "type": "INTEGER",
              "primitive_name": "shape",
              "flow_state": "REF_SINK"
            }
          ],
          "input_order": [
            1,
            0
          ],
          "outputs": [
            {
              "name": "result",
              "primitive_name": "result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "divide",
          "primitive_name": "divide",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "div"
          ],
          "position": {
            "x": 1181,
            "y": 40
          },
          "inputs": [
            {
              "name": "left_operand",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "left_operand",
              "flow_state": "REF_SINK"
            },
            {
              "name": "right_operand",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "right_operand",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "divided_result",
              "primitive_name": "divided_result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "Transpose 1D and 2D",
          "type": "COMPOSITE_OPERATION",
          "position": {
            "x": 1710,
            "y": 38
          },
          "inputs": [
            {
              "name": "Array",
              "shape": [
                14
              ],
              "type": "INTEGER",
              "primitive_name": "Array",
              "flow_state": "REF_SINK"
            }
          ],
          "outputs": [
            {
              "name": "Transposed Array",
              "primitive_name": "Transposed Array",
              "flow_state": "UNBOUND"
            }
          ],
          "operations": [
            {
              "name": "get_shape",
              "primitive_name": "get_shape",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 416,
                "y": 195
              },
              "inputs": [
                {
                  "name": "input",
                  "shape": [
                    14
                  ],
                  "type": "INTEGER",
                  "primitive_name": "input",
                  "flow_state": "REF_SINK"
                }
              ],
              "outputs": [
                {
                  "name": "shape",
                  "primitive_name": "shape",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "get_dimension_size",
              "primitive_name": "get_dimension_size",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 874,
                "y": 196
              },
              "inputs": [
                {
                  "name": "array",
                  "shape": [
                    1
                  ],
                  "type": "INTEGER",
                  "primitive_name": "array",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "dimension_index",
                  "data": 0,
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "dimension_index",
                  "flow_state": "BOOT_SOURCE"
                }
              ],
              "outputs": [
                {
                  "name": "dimension_size",
                  "primitive_name": "dimension_size",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "greater_than",
              "primitive_name": "greater_than",
              "type": "PRIMITIVE_OPERATION",
              "position": {
                "x": 1356,
                "y": 196
              },
              "inputs": [
                {
                  "name": "left_operand",
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "left_operand",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "right_operand",
                  "data": 1,
                  "shape": [],
                  "type": "INTEGER",
                  "primitive_name": "right_operand",
                  "flow_state": "BOOT_SOURCE"
                }
              ],
              "outputs": [
                {
                  "name": "is_greater_than",
                  "primitive_name": "is_greater_than",
                  "flow_state": "UNBOUND"
                }
              ]
            },
            {
              "name": "Transpose",
              "type": "CONDITIONAL_OPERATION",
              "position": {
                "x": 1878,
                "y": 196
              },
              "inputs": [
                {
                  "name": "Is True",
                  "shape": [],
                  "type": "BOOLEAN",
                  "primitive_name": "Is True",
                  "flow_state": "REF_SINK"
                },
                {
                  "name": "Array",
                  "shape": [
                    14
                  ],
                  "type": "INTEGER",
                  "primitive_name": "New Input",
                  "flow_state": "REF_SINK"
                }
              ],
              "outputs": [
                {
                  "name": "Output",
                  "primitive_name": "Output",
                  "flow_state": "UNBOUND"
                }
              ],
              "operations_if_true": [
                {
                  "name": "swap_dimensions",
                  "primitive_name": "swap_dimensions",
                  "type": "PRIMITIVE_OPERATION",
                  "position": {
                    "x": 592,
                    "y": 47
                  },
                  "inputs": [
                    {
                      "name": "array",
                      "primitive_name": "array"
                    },
                    {
                      "name": "dimension_index_1",
                      "data": 0,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index_1",
                      "flow_state": "BOOT_SOURCE"
                    },
                    {
                      "name": "dimension_index_2",
                      "data": 1,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index_2",
                      "flow_state": "BOOT_SOURCE"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "swapped_array",
                      "primitive_name": "swapped_array",
                      "flow_state": "UNBOUND"
                    }
                  ]
                }
              ],
              "links_if_true": [
                {
                  "source": {
                    "operation": "this",
                    "data": "Array"
                  },
                  "sink": {
                    "operation": "swap_dimensions",
                    "data": "array"
                  },
                  "control_points": []
                },
                {
                  "source": {
                    "operation": "swap_dimensions",
                    "data": "swapped_array"
                  },
                  "sink": {
                    "operation": "this",
                    "data": "Output"
                  },
                  "control_points": []
                }
              ],
              "operations_if_false": [
                {
                  "name": "expand_one_dimension",
                  "primitive_name": "expand_one_dimension",
                  "type": "PRIMITIVE_OPERATION",
                  "position": {
                    "x": 534,
                    "y": 47
                  },
                  "inputs": [
                    {
                      "name": "input",
                      "shape": [
                        14
                      ],
                      "type": "INTEGER",
                      "primitive_name": "input",
                      "flow_state": "REF_SINK"
                    },
                    {
                      "name": "dimension_index",
                      "data": 0,
                      "shape": [],
                      "type": "INTEGER",
                      "primitive_name": "dimension_index",
                      "flow_state": "BOOT_SOURCE"
                    }
                  ],
                  "outputs": [
                    {
                      "name": "output",
                      "primitive_name": "output",
                      "flow_state": "UNBOUND"
                    }
                  ]
                }
              ],
              "links_if_false": [
                {
                  "source": {
                    "operation": "this",
                    "data": "Array"
                  },
                  "sink": {
                    "operation": "expand_one_dimension",
                    "data": "input"
                  },
                  "control_points": []
                },
                {
                  "source": {
                    "operation": "expand_one_dimension",
                    "data": "output"
                  },
                  "sink": {
                    "operation": "this",
                    "data": "Output"
                  },
                  "control_points": []
                }
              ],
              "condition": {
                "name": "Is True"
              }
            }
          ],
          "links": [
            {
              "source": {
                "operation": "this",
                "data": "Array"
              },
              "sink": {
                "operation": "get_shape",
                "data": "input"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "get_shape",
                "data": "shape"
              },
              "sink": {
                "operation": "get_dimension_size",
                "data": "array"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "Transpose",
                "data": "Output"
              },
              "sink": {
                "operation": "this",
                "data": "Transposed Array"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "get_dimension_size",
                "data": "dimension_size"
              },
              "sink": {
                "operation": "greater_than",
                "data": "left_operand"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "greater_than",
                "data": "is_greater_than"
              },
              "sink": {
                "operation": "Transpose",
                "data": "Is True"
              },
              "control_points": []
            },
            {
              "source": {
                "operation": "this",
                "data": "Array"
              },
              "sink": {
                "operation": "Transpose",
                "data": "Array"
              },
              "control_points": [
                {
                  "x": 344,
                  "y": 432
                },
                {
                  "x": 1756,
                  "y": 432
                }
              ]
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "get_shape",
            "data": "shape"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "shape"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "divide",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "#Rows"
          },
          "sink": {
            "operation": "broadcast_to_shape",
            "data": "target"
          },
          "control_points": [
            {
              "x": 264,
              "y": 316
            }
          ]
        },
        {
          "source": {
            "operation": "broadcast_to_shape",
            "data": "result"
          },
          "sink": {
            "operation": "divide",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "Input"
          },
          "sink": {
            "operation": "get_shape",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "divide",
            "data": "divided_result"
          },
          "sink": {
            "operation": "Transpose 1D and 2D",
            "data": "Array"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "Transpose 1D and 2D",
            "data": "Transposed Array"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "concatenate",
      "primitive_name": "concatenate",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [
        "concat",
        "join",
        "merge"
      ],
      "position": {
        "x": 2294,
        "y": 41
      },
      "inputs": [
        {
          "name": "array_1",
          "shape": [
            1,
            14
          ],
          "type": "INTEGER",
          "primitive_name": "array_1",
          "flow_state": "REF_SINK"
        },
        {
          "name": "array_2",
          "shape": [
            1,
            14
          ],
          "type": "INTEGER",
          "primitive_name": "array_2",
          "flow_state": "REF_SINK"
        },
        {
          "name": "dimension_index",
          "data": 0,
          "shape": [],
          "type": "INTEGER",
          "primitive_name": "dimension_index",
          "flow_state": "BOOT_SOURCE"
        }
      ],
      "outputs": [
        {
          "name": "concatenated_array",
          "primitive_name": "concatenated_array",
          "flow_state": "UNBOUND"
        }
      ]
    }
  ],
  "links": [
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "Find Number of Cells in Adj Matrix",
        "data": "Input"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Find Number of Cells in Adj Matrix",
        "data": "Output"
      },
      "sink": {
        "operation": "Flatten Input Matrix",
        "data": "#Cells"
      },
      "control_points": [
        {
          "x": 676,
          "y": 351
        }
      ]
    },
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "Flatten Input Matrix",
        "data": "Input"
      },
      "control_points": [
        {
          "x": 350,
          "y": 395
        }
      ]
    },
    {
      "source": {
        "operation": "Find Number of Cells in Adj Matrix",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Cells with Edges",
        "data": "#Cells"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Flatten Input Matrix",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Cells with Edges",
        "data": "Mask"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": "Input"
      },
      "sink": {
        "operation": "No of Rows/Columns in Adj Matrix",
        "data": "Input"
      },
      "control_points": [
        {
          "x": 314,
          "y": 541
        }
      ]
    },
    {
      "source": {
        "operation": "Find Cells with Edges",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Column Indices",
        "data": "Cells with edges"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Find Cells with Edges",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Row Indices",
        "data": "Input"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "No of Rows/Columns in Adj Matrix",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Column Indices",
        "data": "#Columns"
      },
      "control_points": [
        {
          "x": 1590,
          "y": 541
        }
      ]
    },
    {
      "source": {
        "operation": "No of Rows/Columns in Adj Matrix",
        "data": "Output"
      },
      "sink": {
        "operation": "Find Row Indices",
        "data": "#Rows"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Find Row Indices",
        "data": "Output"
      },
      "sink": {
        "operation": "concatenate",
        "data": "array_1"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "Find Column Indices",
        "data": "Output"
      },
      "sink": {
        "operation": "concatenate",
        "data": "array_2"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "concatenate",
        "data": "concatenated_array"
      },
      "sink": {
        "operation": "this",
        "data": "Output"
      },
      "control_points": []
    }
  ],
  "global_constants": [],
  "description": [
    "Takes an adjacency matrix of a graph and outputs an edge index tensor with row 0 representing source and row 1 representing target nodes. "
  ]
}