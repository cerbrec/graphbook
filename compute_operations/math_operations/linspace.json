{
  "name": "Linspace",
  "type": "COMPOSITE_OPERATION",
  "inputs": [
    {
      "name": "lower",
      "primitive_name": "Input"
    },
    {
      "name": "upper",
      "primitive_name": "Input"
    },
    {
      "name": " steps",
      "primitive_name": "Input (1)"
    }
  ],
  "outputs": [
    {
      "name": "Output",
      "primitive_name": "Output",
      "flow_state": "UNBOUND"
    }
  ],
  "operations": [
    {
      "name": "get increment",
      "type": "COMPOSITE_OPERATION",
      "position": {
        "x": 340,
        "y": 282
      },
      "inputs": [
        {
          "name": "lower",
          "primitive_name": "Input"
        },
        {
          "name": "upper",
          "primitive_name": "Input (1)"
        },
        {
          "name": "steps",
          "primitive_name": "Input (2)"
        }
      ],
      "outputs": [
        {
          "name": "Output",
          "primitive_name": "Output",
          "flow_state": "UNBOUND"
        },
        {
          "name": "end_val",
          "primitive_name": "Output (1)",
          "flow_state": "UNBOUND"
        }
      ],
      "output_order": [
        1,
        0
      ],
      "operations": [
        {
          "name": "subtract",
          "primitive_name": "subtract",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "minus",
            "decrement"
          ],
          "position": {
            "x": 400,
            "y": 52
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "primitive_name": "right_operand"
            }
          ],
          "outputs": [
            {
              "name": "subtracted_result",
              "primitive_name": "subtracted_result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "subtract_1",
          "primitive_name": "subtract",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "minus",
            "decrement"
          ],
          "position": {
            "x": 525,
            "y": 392
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "data": 1,
              "shape": [],
              "type": "INTEGER",
              "primitive_name": "right_operand",
              "flow_state": "BOOT_SOURCE"
            }
          ],
          "outputs": [
            {
              "name": "subtracted_result",
              "primitive_name": "subtracted_result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "parse_decimal",
          "primitive_name": "parse_decimal",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "parse_to_decimal",
            "convert_to_decimal",
            "cast_to_decimal",
            "parse_float",
            "parse_to_float",
            "convert_to_float",
            "cast_to_float",
            "parse_double",
            "parse_to_double",
            "convert_to_double",
            "cast_to_double"
          ],
          "position": {
            "x": 942,
            "y": 392
          },
          "inputs": [
            {
              "name": "input",
              "primitive_name": "input"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "primitive_name": "output",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "divide",
          "primitive_name": "divide",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "div"
          ],
          "position": {
            "x": 1642,
            "y": 346
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "primitive_name": "right_operand"
            }
          ],
          "outputs": [
            {
              "name": "divided_result",
              "primitive_name": "divided_result",
              "flow_state": "UNBOUND"
            }
          ]
        },
        {
          "name": "add",
          "primitive_name": "add",
          "type": "PRIMITIVE_OPERATION",
          "aliases": [
            "plus",
            "increment"
          ],
          "position": {
            "x": 2518,
            "y": 534
          },
          "inputs": [
            {
              "name": "left_operand",
              "primitive_name": "left_operand"
            },
            {
              "name": "right_operand",
              "primitive_name": "right_operand"
            }
          ],
          "outputs": [
            {
              "name": "added_result",
              "primitive_name": "added_result",
              "flow_state": "UNBOUND"
            }
          ]
        }
      ],
      "links": [
        {
          "source": {
            "operation": "this",
            "data": "upper"
          },
          "sink": {
            "operation": "subtract",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "lower"
          },
          "sink": {
            "operation": "subtract",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "steps"
          },
          "sink": {
            "operation": "subtract_1",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "subtract_1",
            "data": "subtracted_result"
          },
          "sink": {
            "operation": "parse_decimal",
            "data": "input"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "parse_decimal",
            "data": "output"
          },
          "sink": {
            "operation": "divide",
            "data": "right_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "subtract",
            "data": "subtracted_result"
          },
          "sink": {
            "operation": "divide",
            "data": "left_operand"
          },
          "control_points": [
            {
              "x": 1276,
              "y": 116
            }
          ]
        },
        {
          "source": {
            "operation": "divide",
            "data": "divided_result"
          },
          "sink": {
            "operation": "this",
            "data": "Output"
          },
          "control_points": [
            {
              "x": 2279,
              "y": 109
            }
          ]
        },
        {
          "source": {
            "operation": "divide",
            "data": "divided_result"
          },
          "sink": {
            "operation": "add",
            "data": "left_operand"
          },
          "control_points": []
        },
        {
          "source": {
            "operation": "this",
            "data": "upper"
          },
          "sink": {
            "operation": "add",
            "data": "right_operand"
          },
          "control_points": [
            {
              "x": 414,
              "y": 648
            }
          ]
        },
        {
          "source": {
            "operation": "add",
            "data": "added_result"
          },
          "sink": {
            "operation": "this",
            "data": "end_val"
          },
          "control_points": []
        }
      ]
    },
    {
      "name": "range",
      "primitive_name": "range",
      "type": "PRIMITIVE_OPERATION",
      "aliases": [],
      "position": {
        "x": 1544,
        "y": 55
      },
      "inputs": [
        {
          "name": "start_value",
          "primitive_name": "start_value"
        },
        {
          "name": "end_value",
          "primitive_name": "end_value"
        },
        {
          "name": "step_value",
          "primitive_name": "step_value"
        }
      ],
      "outputs": [
        {
          "name": "vector",
          "primitive_name": "vector",
          "flow_state": "UNBOUND"
        }
      ]
    }
  ],
  "links": [
    {
      "source": {
        "operation": "this",
        "data": "upper"
      },
      "sink": {
        "operation": "get increment",
        "data": "upper"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": " steps"
      },
      "sink": {
        "operation": "get increment",
        "data": "steps"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "get increment",
        "data": "Output"
      },
      "sink": {
        "operation": "range",
        "data": "step_value"
      },
      "control_points": [
        {
          "x": 1398,
          "y": 392
        }
      ]
    },
    {
      "source": {
        "operation": "range",
        "data": "vector"
      },
      "sink": {
        "operation": "this",
        "data": "Output"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "this",
        "data": "lower"
      },
      "sink": {
        "operation": "get increment",
        "data": "lower"
      },
      "control_points": []
    },
    {
      "source": {
        "operation": "get increment",
        "data": "end_val"
      },
      "sink": {
        "operation": "range",
        "data": "end_value"
      },
      "control_points": [
        {
          "x": 960,
          "y": 165
        }
      ]
    },
    {
      "source": {
        "operation": "this",
        "data": "lower"
      },
      "sink": {
        "operation": "range",
        "data": "start_value"
      },
      "control_points": []
    }
  ],
  "global_constants": [],
  "description": [
    "Outputs an array containing linearly spaced elements from the upper to lower bounds"
  ]
}